@use "sass:map";

.flex-grow-1 {
  flex-grow: 1 !important;
}

.flex-grow-0 {
  flex-grow: 0 !important;
}

@for $i from 0 to 10 {
  .mx-#{$i} {
    margin: {
      left: calc(#{$i} * $grid-gap-step) !important;
      right: calc(#{$i} * $grid-gap-step) !important;
    }
  }
}

@for $i from 0 to 7 {
  .mb-#{$i} {
    margin-bottom: calc(#{$i} * $grid-gap-step) !important;
  }
}

@for $i from 0 to 7 {
  .mt-#{$i} {
    margin-top: calc(#{$i} * $grid-gap-step) !important;
  }
}

@include Tablet {
  @for $i from 0 to 7 {
    .mt-md-#{$i} {
      margin-top: calc(#{$i} * $grid-gap-step) !important;
    }
  }

  @for $i from 0 to 7 {
    .gap-md-#{$i} {
      gap: calc(#{$i} * $grid-gap-step) !important;
    }
  }
}

@for $i from 0 to 3 {
  .ml-#{$i} {
    margin-left: calc(#{$i} * $grid-gap-step) !important;
  }
}

@for $i from 0 to 6 {
  .mr-#{$i} {
    margin-right: calc(#{$i} * $grid-gap-step) !important;
  }
}

@for $i from 0 to 11 {
  .gap-#{$i} {
    gap: calc(#{$i} * $grid-gap-step) !important;
  }
}

@for $i from 0 to 4 {
  .pt-#{$i} {
    padding-top: calc(#{$i} * $grid-gap-step) !important;
  }
}



@for $i from 0 to 1000 {
  .mw-#{$i} {
    width: 100%;
    max-width: calc(#{$i} / $fs-base * 1rem) !important;
  }

  .mh-#{$i} {
    width: 100%;
    max-height: calc(#{$i} / $fs-base * 1rem) !important;
  }
}

@for $i from 0 to 100 {
  .mw-#{$i}p {
    width: 100%;
    max-width: percentage(calc($i / 100)) !important;
  }
}

@for $i from 0 to 10 {
  .px-#{$i} {
    padding: {
      left: calc(#{$i} * $grid-gap-step) !important;
      right: calc(#{$i} * $grid-gap-step) !important;
    }
  }
}

@for $i from 0 to 10 {
  .py-#{$i} {
    padding: {
      top: calc(#{$i} * $grid-gap-step) !important;
      bottom: calc(#{$i} * $grid-gap-step) !important;
    }
  }
}

@for $i from 0 to 10 {
  .pb-#{$i} {
    padding-bottom: calc(#{$i} * $grid-gap-step) !important;
  }
}

.p-1 {
  padding: $grid-gap-step !important;
}

.m-auto {
  margin: auto;
}

@for $i from 0 to 101 {
  .mw-#{$i} {
    max-width: #{$i}rem !important;
  }
}

.flex {
  @include flexify($wrap: wrap);

  &-nowrap {
    @include flexify($wrap: nowrap);
  }

  &-column {
    @include flexify($column: true);
  }

  &-center {
    @include flexify($align: center, $justify: center);
  }
}

@each $align, $val in $flexAligns {
  .align-items {
    &-#{$align} {
      @include flexify($align: $val);
    }
  }

  .justify-content {
    &-#{$align} {
      @include flexify($justify: $val);
    }
  }
}

.w-100 {
  width: 100% !important;
}

.w-auto {
  min-width: auto !important;
  width: auto !important;
}

.h-100 {
  height: 100%;
}

.cursor-pointer {
  cursor: pointer;
}
